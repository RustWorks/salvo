name: ci-linux

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  check:
    strategy:
        fail-fast: false
        matrix:
          version:
            - stable
            # - nightly
    name: Cargo check ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: check build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests

      - name: check release build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests --release

  test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
          # - nightly

    name: Test ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    needs: [check]
    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cargo test
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --all-features --no-fail-fast -- --nocapture
  hack:
    strategy:
        fail-fast: false
        matrix:
          version:
            - nightly
    name: Cargo heck ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    needs: [check, test]
    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-hack
        run: cargo install cargo-hack

      - name: check --feature-powerset
        run: cargo hack check --feature-powerset --depth 1 -Z avoid-dev-deps

  cover:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
          # - nightly

    name: Coverage ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    needs: [check]
    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Generate coverage file
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/main' || github.event_name == 'push')
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --all-features -p salvo_macros salvo_core salvo_extra salvo-session salvo-flash salvo-cors salvo-csrf salvo-cache salvo-proxy salvo-rate-limiter salvo-serve-static --out Xml

      - name: Upload to codecov
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/main' || github.event_name == 'push')
        uses: codecov/codecov-action@v3
        with:
          file: cobertura.xml

      # - name: Clear the cargo caches
      #   run: |
      #     cargo install cargo-cache --no-default-features --features ci-autoclean
      #     cargo-cache